name: Build Electron

on:
    workflow_dispatch:
        inputs:
            environment:
                type: environment
            targets:
                type: choice
                description: "Targets to build"
                default: "All"
                required: true
                options:
                    - "All"
                    - "Linux"
                    - "macOS"
                    - "Windows"

    push:
        branches:
            - "v4"
            - "master"
            - "feature/**"
            - "fix/**"
        paths:
            - "packages/app/**"
            - "packages/core/**"
            - "packages/electron/**"
            - "packages/pwa/**"
            - "packages/locale/**"

env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    linux:
        if: ${{ !github.event.inputs.targets || github.event.inputs.targets == 'All' || github.event.inputs.targets == 'Linux' }}
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment || 'Local' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version-file: ".nvmrc"
            - name: Install dependencies
              run: |
                  npm i -g npm@8.2.0
                  npm ci
            - name: Build
              run: |
                  PL_PWA_URL='${{ secrets.PL_PWA_URL }}' npm run electron:build
            - name: Archive AppImage
              uses: actions/upload-artifact@v2
              with:
                  name: padloc-linux-${{ github.sha }}-unsigned.AppImage
                  path: packages/electron/dist/*.AppImage
                  if-no-files-found: error
            - name: Archive Unpacked
              uses: actions/upload-artifact@v2
              with:
                  name: padloc-linux-${{ github.sha }}-unpacked
                  path: packages/electron/dist/linux-unpacked
                  if-no-files-found: error
    macos:
        if: ${{ !github.event.inputs.targets || github.event.inputs.targets == 'All' || github.event.inputs.targets == 'macOS' }}
        runs-on: macos-11
        environment: ${{ github.event.inputs.environment || 'Local' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version-file: ".nvmrc"
            - name: Install dependencies
              run: |
                  npm i -g npm@8.2.0
                  npm ci
            - name: Build
              run: |
                  PL_PWA_URL='${{ secrets.PL_PWA_URL }}' npm run electron:build
              env:
                  CSC_IDENTITY_AUTO_DISCOVERY: false
            - name: Archive dmg
              uses: actions/upload-artifact@v2
              with:
                  name: padloc-macos-${{ github.sha }}-unsigned.dmg
                  path: packages/electron/dist/*.dmg
                  if-no-files-found: error
    windows:
        if: ${{ !github.event.inputs.targets || github.event.inputs.targets == 'All' || github.event.inputs.targets == 'Windows' }}
        runs-on: windows-2019
        environment: ${{ github.event.inputs.environment || 'Local' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version-file: ".nvmrc"
            # TODO: cordova prepare runs and fails in Windows
            # - name: Install dependencies
            #   run: |
            #       npm i -g npm@8.2.0
            #       npm ci
            # - name: Build
            #   run: |
            #       PL_PWA_URL='${{ secrets.PL_PWA_URL }}' npm run electron:build
            # - name: Archive exe
            #   uses: actions/upload-artifact@v2
            #   with:
            #       name: padloc-windows-${{ github.sha }}-unsigned.exe
            #       path: packages/electron/dist/*.exe
            #       if-no-files-found: error
